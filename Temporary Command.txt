const Discord = require('discord.js')
const frostine = new Discord.Client()

const config = require('./config.json')
const command = require('./utillity/prefix_perma.js')


frostine.on('ready', () => {
    console.log('Bot Online')

    // ----------> Start Commands of Server <----------//
    //Help Command//
    command(frostine, 'help', (message) => {
        const help = new Discord.MessageEmbed()
        .setTitle('Frostine Bot Plugins Commands')
        .setDescription('Frostine Bot!! Prefix (+)')
        .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
        .addField('Commands For Members', '+member')
        .addField('Admin Commands', '+admin')
        .addField('Moderators Commands', '+mod')
        .setColor('96fff5')
        message.channel.send(help)
    })
    //Help Command//

    //---------- ~ Help Command (Members) ~ ----------//
    command(frostine, 'member', (message) => {
        const help_member = new Discord.MessageEmbed()
        .setTitle('Members Commands')
        .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
        .setDescription('Commands that members can access | Prefix (+)')
        .addFields({
            name: 'ping',
            value:'Display the bot ping (ms)',
        }, {
            name: 'info',
            value: 'To access Bot Information',
        }, {
            name: 'invite',
            value: 'Invite Link Frostine Team Server',
        }, {
            name: 'avatar',
            value: 'Displaying User Avatar / Members Avatar (alpha) | +avatar (@member)',
        }, {
            name: 'games',
            value: 'To see games that frostine bot have',
        })
        .setColor('GREEN')
        .setTimestamp()
        
        message.channel.send(help_member)
    })

    //---------- Ping Command ----------//
    command(frostine, 'ping', (message) => {
        message.channel.send(`**${frostine.ws.ping}ms**, Bot Ping!!`)
    })
    //---------- Ping command ----------//

    //---------- Info command ----------//
    command(frostine, 'info', (message) => {
        const info = new Discord.MessageEmbed()
        .setTitle('Bot Information')
        .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
        .addField('Developer/Author', config.author)
        .addField('Bot Version', config.version)
        .setColor('96fff5')
        message.channel.send(info)
    })
    //---------- Info command ----------//

    //---------- Invite command ----------//
    command(frostine, 'invite', (message) => {
        const invite_link = config.invite
        message.reply(invite_link)
    })
    //---------- Invite command ----------//

    //---------- Avatar command ----------//
    command(frostine, 'avatar', (message) => {
        const target = message.mentions.users.first()
        const avatar = new Discord.MessageEmbed()
        .setTitle(target.tag + ' Avatar')
        .setImage(target.avatarURL({dynamic: true}))
        .setColor('RANDOM')
        .setFooter(`${message.author.username}`)

        message.channel.send(avatar)

    })
    //---------- Avatar command ----------//

    //---------- ~ Games command ~ ----------//
    command(frostine, 'games', (message) => {
        const games = new Discord.MessageEmbed()
        .setTitle('Games!!')
        .setDescription('Games that author make!! Prefix (+)')
        .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
        .addFields({
            name: 'ttt',
            value: 'Tic Tac Toe Games | +ttt (@user)'
        })
        .setColor('RANDOM')

        message.channel.send(games)
    })
    
    //---------- TTT command ----------//
    command(frostine, 'ttt', (message) => {
        const { tictactoe } = require('reconlx')
        const member = message.mentions.members.first()

        if(!member){
            const ttt = new Discord.MessageEmbed()
            .addField('Upss!! Wrong Syntax', 'Please Specify the Members')
            .setColor('RED')
            message.channel.send(ttt)
        } else if (member === null){
            const ttt = new Discord.MessageEmbed()
            .addField('Upss!! Wrong Syntax', 'Please Specify the Members')
            .setColor('RED')
            message.channel.send(ttt)
        }
        new tictactoe({
            player_two: member,
            message: message
        })
    })
    //---------- TTT command ----------//
    //---------- ~ Games command ~ ----------//
    //---------- ~ Help Command (Members) ~ ----------//



    //---------- ~ Help Command (Admin/CEO) ~ ----------//
    command(frostine, 'admin', (message) => {
        if(message.member.roles.cache.has('849250745660080128') || message.member.hasPermission('ADMINISTRATOR')){
            const admin_help = new Discord.MessageEmbed()
            .setTitle('Admin Commands')
            .setDescription('Just Admin/CEO can use this command!! Prefix (+)')
            .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
            .addFields({
                name: 'status',
                value: `Change bot status **(WARNING DONT USE THIS COMMAND / SPAM THIS COMMAND)**`
            }, {
                name: 'roles',
                value: 'Display all Frostine Team Roles'
            }, {
                name: 'data',
                value: 'Get Members Data!! (+data (@user))'
            }, {
                name: 'slowmode',
                value: 'comming soon!!'
            })
            .setColor('ba2b2b')

            message.channel.send(admin_help)
        } else {
            const notPerms = new Discord.MessageEmbed()
            .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
            .addField('How dare you to use this command!!', 'Missing Permission!!')
            .setColor('RED')
            .setTimestamp('')
        }
    })

    //---------- Status Command ----------//
    command(frostine, 'status', (message) => {
        if(message.member.roles.cache.has('849250745660080128') || message.member.hasPermission('ADMINISTRATOR')){
            const content = message.content.replace('+status ', '')

            frostine.user.setPresence({
                activity: {
                    name: content,
                    type: 0,
                },
            })
            if(content){
                message.reply('Status Changed!!')
            } 
        } else{
            const notPerms = new Discord.MessageEmbed()
            .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
            .addField('How dare you to use this command!!', 'Missing Permission!!')
            .setColor('RED')
            .setTimestamp('')

            message.channel.send(notPerms) 
        }
    })
    //---------- Status Command ----------//

    //---------- Display Roles Command ----------//
    command(frostine, 'roles', (message) => {
        if(message.member.roles.cache.has('849250745660080128') || message.member.hasPermission('ADMINISTRATOR')){
            var rolemap = message.guild.roles.cache.sort((a, b) => b.position - a.position).map(r => r).join("\n")
            if (rolemap.length > 1024) rolemap = "To many roles to display";
            if (!rolemap) rolemap = "No roles";

            const roles_list = new Discord.MessageEmbed()
            .addField("Role List" , rolemap)
            .setColor('96fff5')
            message.channel.send(roles_list);
        }
        else{
            const notPerms = new Discord.MessageEmbed()
            .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
            .addField('How dare you to use this command!!', 'Missing Permission!!')
            .setColor('RED')
            .setTimestamp('')

            message.channel.send(notPerms)
        }
    })
    //---------- Display Roles Command ----------//

    //---------- Data Command ----------//
    command(frostine, 'data', (message) => {
        if(message.member.roles.cache.has('849250745660080128') || message.member.hasPermission('ADMINISTRATOR')){
            var target = message.mentions.users.first() || message.author
            var member = message.mentions.members.first() || message.member
            var rolemap = member.roles.cache.sort((a, b) => b.position - a.position).map(r => `${r}`).join(' ')
            var link_avatar = message.author.avatarURL()

            const data = new Discord.MessageEmbed()
            .setTitle(target.tag, message.author.avatarURL({dynamic: true}))
            .setURL(`${link_avatar}`)
            .setTimestamp()
            .addFields({
                name: 'Roles',
                value: rolemap,
                inline: true
            }, {
                name: 'Joined at',
                value: member.joinedAt,
                inline: true
            }, {
                name: 'Created at',
                value: target.createdAt,
                inline: true
            })
            .setThumbnail(target.displayAvatarURL({ dynamic: true }))
            .setColor(member.displayColor)

            message.channel.send(data)
        } else {
            const notPerms = new Discord.MessageEmbed()
            .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
            .addField('How dare you to use this command!!', 'Missing Permission!!')
            .setColor('RED')
            .setTimestamp('')

            message.channel.send(notPerms)
        }
    })
    //---------- Data Command ----------//
    //---------- ~ Help Command (Admin/CEO) ~ ----------//



    //---------- ~ Help Command (Moderators) ~ ----------//
    command(frostine, 'mod', (message) => {
        if(message.member.roles.cache.has('849250745660080128') || message.member.roles.cache.has('849250746486751262') || message.member.hasPermission('ADMINISTRATOR')){
            const mod_help = new Discord.MessageEmbed()
            .setTitle('Moderator Commands')
            .setDescription('Just Admin/CEO/Mod can use this command!! Prefix (+)')
            .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
            .addFields({
                name: 'ban',
                value: 'Command that can ban user from server (+ban (@user))'
            }, {
                name: 'kick',
                value: 'Command that can kick user from server (+kick (@user))'
            }, {
                name: 'clear',
                value: 'Command that automatically clear 100 messages!!'
            })
            .setColor('PURPLE')

            message.channel.send(mod_help)
        } else {
            const notPerms = new Discord.MessageEmbed()
            .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
            .addField('How dare you to use this command!!', 'Missing Permission!!')
            .setColor('RED')
            .setTimestamp('')

            message.channel.send(notPerms)
        }
    })

    //---------- Ban Command ----------//
    command(frostine, 'ban', (message) => {
        const { member, mentions } = message
        const tag = `<@${member.id}>`

        if(member.hasPermission('BAN_MEMBERS')){
            const target = mentions.users.first()
            const member = message.mentions.members.first() || message.member
            if(target){
                const targetMember = message.guild.members.cache.get(target.id)
                targetMember.ban()
                
                const banMember = new Discord.MessageEmbed()
                .addField(`${targetMember.tag}, Successfully got banned from server`, `by, ${member.tag}`)
                message.channel.send(banMember)
            } 
            else if(!mentions.users.first()){
                message.reply('+ban (@user)')
            } else {
                const notPerms = new Discord.MessageEmbed()
                .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
                .addField('How dare you to use this command!!', 'Missing Permisson!!')
                .setColor('RED')
                .setTimestamp('')

            message.channel.send(notPerms)
            }
        }
    })
    //---------- Ban Command ----------/

    //---------- Kick Command ----------/
    command(frostine, 'kick', (message) => {
        /////////////////////////////////////
    })
    //---------- Kick Command ----------/

    //---------- Clear Command ----------/
    command(frostine, 'clear', (message) => {
        if(message.member.roles.cache.has('849250745660080128') || message.member.roles.cache.has('849250746486751262') || message.member.hasPermission('ADMINISTRATOR')){
            message.channel.messages.fetch().then((results) => {
                message.channel.bulkDelete(results)
            })
            message.reply('Text Cleared!!')
            message.delete({setTimeout: 10})
        } else{
            const notPerms = new Discord.MessageEmbed()
                .setAuthor(message.author.username, message.author.avatarURL({dynamic: true}))
                .addField('How dare you to use this command!!', 'Missing Permisson!!')
                .setColor('RED')
                .setTimestamp('')

                message.channel.send(notPerms)
        }
    })
    //---------- Clear Command ----------/
    //---------- ~ Help Command (Moderators) ~ ----------//

    const { prefix } = config
    frostine.user.setPresence({
        activity: {
            type: `PLAYING`,
            name: 'Frostine Server',
        },
    })  
})

frostine.login(config.token)





const { prefix } = require('../config.json')

module.exports = (frostine, aliases, callback) => {
    if(typeof aliases === 'string'){
        aliases = [aliases]
    }

    frostine.on('message', message => {
        const { content } = message;

        aliases.forEach(alias => {
            const command = `${prefix}${alias}`

            if(content.startsWith(`${command}`) || content === command){
                console.log(`Running Command ${command}`)
                callback(message)
            }
        })
    })
}






if(message.content.toLowerCase().startsWith("-slowmode")){
 if (message.member.hasPermission("MANAGE_CHANNELS")) {
 let sentence = message.content.split(" ");
 sentence.shift();
 sentence = sentence.join(" "); 
 if(sentence != null){
 message.channel.setRateLimitPerUser(sentence);
 }

 message.reply(This chat now has a slowmode of ${sentence} seconds!)
 } else {
 message.reply("You don't have perms to do that...")
 } 
}
